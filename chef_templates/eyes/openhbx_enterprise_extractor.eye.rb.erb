BUS_DIRECTORY = File.join(File.dirname(__FILE__), "..")
LOG_DIRECTORY = File.join(BUS_DIRECTORY, "log")
PID_DIRECTORY = File.join(BUS_DIRECTORY, "pids")

BLUEPILL_LOG = File.join(LOG_DIRECTORY, "openhbx_enterprise_extractor.log")

Eye.config do
  logger BLUEPILL_LOG

  # REPLACE ALL THESE SETTINGS WITH MAIL SETTINGS
  # AND THE CONTACT LIST
  mail :host => "smtp4.dc.gov", :port => 25, :from_mail => "no-reply@dchbx.info"
  contact :tevans, :mail, 'trey.evans@dc.gov'
  contact :dthomas, :mail, 'dan.thomas@dc.gov'
  # END REPLACE
end

def define_forked_worker(worker_name, directory, worker_command, watch_kids = false)
  process(worker_name) do
    start_command worker_command
    stop_on_delete true
    stop_signals [:TERM, 10.seconds, :KILL]
    start_timeout 5.seconds
    pid_file File.join(PID_DIRECTORY, "#{worker_name}.pid")
    daemonize true
    working_dir directory
    stdall File.join(LOG_DIRECTORY, "#{worker_name}.log")
    if watch_kids
      monitor_children do
        stop_command "/bin/kill -9 {PID}"
        check :memory, :every => 30, :below => 200.megabytes, :times => [3,5]
      end
    end
  end
end

Eye.application 'openhbx_enterprise_extractor' do
  # REPLACE THESE SETTINGS WITH A LIST REFLECTING THE ABOVE
  notify :tevans, :info
  notify :dthomas, :info
  # END REPLACE

  define_forked_worker("sneakers", BUS_DIRECTORY, "bundle exec rails r -e production script/run_workers.rb", true)
end
